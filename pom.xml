<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <groupId>com.louisamoros.cdb</groupId>
 <artifactId>computerdatabase</artifactId>
 <name>computerdatabase</name>
 <version>0.0.1-SNAPSHOT</version>
 <packaging>war</packaging>
 <repositories>
  <repository>
   <id>version99</id><!-- highly available repository serving empty artifacts -->
   <url>http://version99.qos.ch/</url>
  </repository>
 </repositories>
 <properties>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

  <!-- DB -->
  <mysql-connector.version>5.1.38</mysql-connector.version>
  <bonecp.version>0.8.0.RELEASE</bonecp.version>

  <!-- Javadoc -->
  <javadoc.version>2.10.3</javadoc.version>

  <!-- Log -->
  <slf4j-api-version>1.7.12</slf4j-api-version>
  <logback-classic-version>1.1.3</logback-classic-version>
  <jcl-over-slf4j-version>1.7.18</jcl-over-slf4j-version>
  <commons-logging-version>99-empty</commons-logging-version>

  <!-- Servlet -->
  <javax.servlet.version>3.1.0</javax.servlet.version>

  <!-- JSP + JSTL -->
  <javax.servlet.jsp.version>2.1</javax.servlet.jsp.version>
  <jstl.version>1.2</jstl.version>

  <!-- Test -->
  <junit.version>4.12</junit.version>
  <mockito.version>1.10.19</mockito.version>
  <selenium.version>2.52.0</selenium.version>

  <!-- Spring -->
  <springframework.version>4.2.5.RELEASE</springframework.version>

 </properties>

 <dependencies>

  <!-- Spring -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-core</artifactId>
   <version>${springframework.version}</version>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-context</artifactId>
   <version>${springframework.version}</version>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-tx</artifactId>
   <version>${springframework.version}</version>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-web</artifactId>
   <version>${springframework.version}</version>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-jdbc</artifactId>
   <version>${springframework.version}</version>
  </dependency>
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring-test</artifactId>
   <version>${springframework.version}</version>
  </dependency>

  <!-- MySql connector for JDBC -->
  <dependency>
   <groupId>mysql</groupId>
   <artifactId>mysql-connector-java</artifactId>
   <version>${mysql-connector.version}</version>
  </dependency>

  <!-- Bonecep connection pool manager -->
  <dependency>
   <groupId>com.jolbox</groupId>
   <artifactId>bonecp</artifactId>
   <version>${bonecp.version}</version>
  </dependency>

  <!-- JSTL -->
  <dependency>
   <groupId>jstl</groupId>
   <artifactId>jstl</artifactId>
   <version>${jstl.version}</version>
  </dependency>

  <!-- JSP -->
  <dependency>
   <groupId>javax.servlet.jsp</groupId>
   <artifactId>jsp-api</artifactId>
   <version>${javax.servlet.jsp.version}</version>
   <scope>provided</scope>
  </dependency>

  <!-- Servlet -->
  <dependency>
   <groupId>javax.servlet</groupId>
   <artifactId>javax.servlet-api</artifactId>
   <version>${javax.servlet.version}</version>
   <scope>provided</scope>
  </dependency>

  <!-- Logback for nice logging using slf4j -->
  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>slf4j-api</artifactId>
   <version>${slf4j-api-version}</version>
  </dependency>
  <dependency>
   <groupId>ch.qos.logback</groupId>
   <artifactId>logback-classic</artifactId>
   <version>${logback-classic-version}</version>
  </dependency>
  <dependency>
   <groupId>org.slf4j</groupId>
   <artifactId>jcl-over-slf4j</artifactId>
   <version>${jcl-over-slf4j-version}</version><!-- Override Log for Spring -->
  </dependency>
  <dependency>
   <groupId>commons-logging</groupId><!-- Empty jar for create a bridge -->
   <artifactId>commons-logging</artifactId>
   <version>${commons-logging-version}</version>
  </dependency>


  <!-- Junit for testing -->
  <dependency>
   <groupId>junit</groupId>
   <artifactId>junit</artifactId>
   <version>${junit.version}</version>
   <scope>test</scope>
  </dependency>

  <!-- Mockito for test -->
  <dependency>
   <groupId>org.mockito</groupId>
   <artifactId>mockito-all</artifactId>
   <version>${mockito.version}</version>
  </dependency>

  <!-- Selenium for integration tests -->
  <dependency>
   <groupId>org.seleniumhq.selenium</groupId>
   <artifactId>selenium-java</artifactId>
   <version>${selenium.version}</version>
   <scope>test</scope>
  </dependency>

  <!-- Apache cli -->
  <dependency>
   <groupId>commons-cli</groupId>
   <artifactId>commons-cli</artifactId>
   <version>1.3.1</version>
  </dependency>


 </dependencies>

 <build>

  <!-- Name of the war -->
  <finalName>cdb</finalName>

  <plugins>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.5.1</version>
    <configuration>
     <source>1.8</source>
     <target>1.8</target>
    </configuration>
   </plugin>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.12.4</version>
    <configuration>
     <includes>
      <include>com/louisamoros/cdb/utest/**.java</include>
     </includes>
    </configuration>
   </plugin>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-failsafe-plugin</artifactId>
    <version>2.19.1</version>
    <configuration>
     <includes>
      <include>com/louisamoros/cdb/itest/**.java</include>
     </includes>
    </configuration>
    <executions>
     <execution>
      <goals>
       <goal>integration-test</goal>
       <goal>verify</goal>
      </goals>
     </execution>
    </executions>
   </plugin>

   <plugin>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-maven2-plugin</artifactId>
    <version>1.2.0</version>
    <configuration>
     <wait>false</wait>
     <container>
      <containerId>tomcat7x</containerId>
      <zipUrlInstaller>
       <url>http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.30/bin/apache-tomcat-8.0.30.zip</url>
      </zipUrlInstaller>
     </container>
     <configuration>
      <properties>
       <cargo.servlet.port>8180</cargo.servlet.port>
       <cargo.tomcat.ajp.port>8109</cargo.tomcat.ajp.port>
      </properties>
     </configuration>
    </configuration>
    <executions>
     <!-- Cargo start goal is bound to pre-integration-test phase. Cargo will download a Tomcat 8.0.32 
      server an configure it to run on ports 8180 and 8109. After that the application under test is deployed. -->
     <execution>
      <id>start-container</id>
      <phase>pre-integration-test</phase>
      <goals>
       <goal>start</goal>
      </goals>
     </execution>
     <!-- Cargo stop goal is bound to post-integration-test phase. During this phase, that runs once 
      Failsafe finishes executing the integration tests, Cargo will stop the Tomcat server. -->
     <execution>
      <id>stop-container</id>
      <phase>post-integration-test</phase>
      <goals>
       <goal>stop</goal>
      </goals>
     </execution>
    </executions>
   </plugin>

  </plugins>
 </build>

</project>
