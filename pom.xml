<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.louisamoros.cdb</groupId>
    <artifactId>computerdatabase</artifactId>
    <name>computerdatabase</name>
    <version>0.7.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>core</module>
        <module>persistence</module>
        <module>service</module>
        <module>binding</module>
        <module>webapp</module>
        <module>console</module>
        <module>webservice</module>
    </modules>

    <repositories>
        <repository>
            <id>version99</id><!-- highly available repository serving empty artifacts -->
            <url>http://version99.qos.ch/</url>
        </repository>
    </repositories>

    <properties>
        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring -->
        <springframework.version>4.2.5.RELEASE</springframework.version>

        <!-- Spring security -->
        <springframework.security.version>4.0.4.RELEASE</springframework.security.version>

        <!-- Logging -->
        <slf4j.api.version>1.7.12</slf4j.api.version>
        <logback.classic.version>1.1.3</logback.classic.version>
        <jcl.over.slf4j.version>1.7.18</jcl.over.slf4j.version>
        <commons.logging.version>99-empty</commons.logging.version>

        <!-- Test -->
        <junit.version>4.12</junit.version>
        <powermockito.version>1.6.4</powermockito.version>
        <selenium.version>2.52.0</selenium.version>
        <h2db.version>1.4.191</h2db.version>

        <!-- Build/Maven Plugins -->
        <maven.compiler.version>3.5.1</maven.compiler.version>
        <jdk.version>1.8</jdk.version>
        <maven.surefire.version>2.12.4</maven.surefire.version>
        <maven.failsafe.version>2.19.1</maven.failsafe.version>
        <maven.cargo.version>1.2.0</maven.cargo.version>
        <maven.checkstyle.version>2.17</maven.checkstyle.version>
        <maven.apt.version>1.1.3</maven.apt.version>

        <!-- Validation -->
        <javax.validation>1.1.0.Final</javax.validation>
        <hibernate.validation>5.0.1.Final</hibernate.validation>

        <!-- Commons cli apache used by cdb cli -->
        <commons.cli.version>1.3.1</commons.cli.version>

        <!-- Servlet + JSP + JSTL -->
        <javax.servlet.version>3.1.0</javax.servlet.version>
        <javax.servlet.jsp.version>2.1</javax.servlet.jsp.version>
        <jstl.version>1.2</jstl.version>

        <!-- Persistence -->
        <mysql.connector.version>5.1.38</mysql.connector.version>
        <bonecp.version>0.8.0.RELEASE</bonecp.version>
        <spring.jpa.version>1.9.4.RELEASE</spring.jpa.version>
        <querydsl.version>3.7.2</querydsl.version>
        <hibernate.version>5.1.0.Final</hibernate.version>

        <!-- Jackson -->
        <jackson.version>2.5.3</jackson.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Core module -->
            <dependency>
                <groupId>com.louisamoros.cdb</groupId>
                <artifactId>core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- Validation -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validation}</version>
            </dependency>
            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <!-- Spring Security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${springframework.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${springframework.security.version}</version>
            </dependency>

            <!-- QueryDsl -->
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.api.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.classic.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${jcl.over.slf4j.version}</version><!-- Override Log for Spring -->
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId><!-- Empty jar to create a bridge -->
                <artifactId>commons-logging</artifactId>
                <version>${commons.logging.version}</version>
            </dependency>
            <!-- Testing (Junit/Mockito) -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-mockito-release-full</artifactId>
                <version>${powermockito.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Persistence module -->
            <dependency>
                <groupId>com.louisamoros.cdb</groupId>
                <artifactId>persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- QueryDsl -->
            <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl.version}</version>
            </dependency>
            <!-- Spring jpa -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>${spring.jpa.version}</version>
            </dependency>
            <!-- Bone cp connection pool manager -->
            <dependency>
                <groupId>com.jolbox</groupId>
                <artifactId>bonecp</artifactId>
                <version>${bonecp.version}</version>
            </dependency>
            <!-- Hibernate implementation -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- MySql connector -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>
            <!-- Hibernate extension used to auto convert LocalDate to Timestamp -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-java8</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- testing database -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2db.version}</version>
            </dependency>

            <!-- Service module -->
            <dependency>
                <groupId>com.louisamoros.cdb</groupId>
                <artifactId>service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Binding module -->
            <dependency>
                <groupId>com.louisamoros.cdb</groupId>
                <artifactId>binding</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Webapp module -->
            <dependency>
                <groupId>com.louisamoros.cdb</groupId>
                <artifactId>webapp</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- JSTL -->
            <dependency>
                <groupId>jstl</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
            </dependency>
            <!-- JSP -->
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${javax.servlet.jsp.version}</version>
            </dependency>
            <!-- Servlet -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Jackson for rest api -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- Testing (Selenium) -->
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Console module -->
            <dependency>
                <groupId>com.louisamoros.cdb</groupId>
                <artifactId>console</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Apache cli used for the cdb cli -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons.cli.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>

        <!-- Name of the war -->
        <finalName>cdb</finalName>

        <plugins>
            <!-- JDK version used by maven -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>

            <!-- Specification of JUnit usage -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/UT*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Specification of integration testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <configuration>
                    <includes>
                        <include>**/IT*.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Checkstyle is active during building war. If error build will fail. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Embedded tomcat for integration test with cargo. Configuration in sub-module. -->
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>${maven.cargo.version}</version>
                </plugin>
                <!-- Maven query class generator. Configuration in sub-module. -->
                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>${maven.apt.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

</project>
