<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <modelVersion>4.0.0</modelVersion>
 <groupId>com.louisamoros.cdb</groupId>
 <artifactId>computerdatabase</artifactId>
 <name>computerdatabase</name>
 <version>0.0.1-SNAPSHOT</version>
 <packaging>war</packaging>

 <properties>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  <mysql-connector.version>5.1.38</mysql-connector.version>
  <javadoc.version>2.10.3</javadoc.version>
  <logback.version>1.1.3</logback.version>
  <javax.servlet.version>3.1.0</javax.servlet.version>
  <javax.servlet.jsp.version>2.1</javax.servlet.jsp.version>
  <junit.version>4.12</junit.version>
  <jstl.version>1.2</jstl.version>
  <mockito.version>1.10.19</mockito.version>
  <power-mockito.version>1.6.4</power-mockito.version>
  <dbunit.version>2.5.1</dbunit.version>
  <h2.version>1.4.191</h2.version>
  <selenium.version>2.52.0</selenium.version>
  <bonecp.version>0.8.0.RELEASE</bonecp.version>
 </properties>

 <dependencies>

  <!-- Spring -->
  <dependency>
   <groupId>org.springframework</groupId>
   <artifactId>spring</artifactId>
   <version>2.5.6</version>
  </dependency>

  <!-- MySql connector for JDBC -->
  <dependency>
   <groupId>mysql</groupId>
   <artifactId>mysql-connector-java</artifactId>
   <version>${mysql-connector.version}</version>
  </dependency>

  <!-- Bonecep connection pool manager -->
  <dependency>
   <groupId>com.jolbox</groupId>
   <artifactId>bonecp</artifactId>
   <version>${bonecp.version}</version>
  </dependency>

  <!-- JSTL -->
  <dependency>
   <groupId>jstl</groupId>
   <artifactId>jstl</artifactId>
   <version>${jstl.version}</version>
  </dependency>

  <!-- Servlet -->
  <dependency>
   <groupId>javax.servlet</groupId>
   <artifactId>javax.servlet-api</artifactId>
   <version>${javax.servlet.version}</version>
   <scope>provided</scope>
  </dependency>

  <dependency>
   <groupId>javax.servlet.jsp</groupId>
   <artifactId>jsp-api</artifactId>
   <version>${javax.servlet.jsp.version}</version>
   <scope>provided</scope>
  </dependency>

  <!-- Logback for nice logging using slf4j -->
  <dependency>
   <groupId>ch.qos.logback</groupId>
   <artifactId>logback-classic</artifactId>
   <version>1.1.5</version>
  </dependency>

  <!-- Junit for testing -->
  <dependency>
   <groupId>junit</groupId>
   <artifactId>junit</artifactId>
   <version>${junit.version}</version>
   <scope>test</scope>
  </dependency>

  <!-- Mockito for test -->
  <dependency>
   <groupId>org.mockito</groupId>
   <artifactId>mockito-all</artifactId>
   <version>${mockito.version}</version>
  </dependency>
  <dependency>
   <groupId>org.powermock</groupId>
   <artifactId>powermock-mockito-release-full</artifactId>
   <version>${power-mockito.version}</version>
   <classifier>full</classifier>
   <scope>test</scope>
  </dependency>

  <!-- Dbunit for db testing -->
  <dependency>
   <groupId>org.dbunit</groupId>
   <artifactId>dbunit</artifactId>
   <version>${dbunit.version}</version>
   <scope>test</scope>
  </dependency>

  <!-- H2 embedded db -->
  <dependency>
   <groupId>com.h2database</groupId>
   <artifactId>h2</artifactId>
   <version>${h2.version}</version>
   <scope>test</scope>
  </dependency>

  <!-- Selenium for integration tests -->
  <dependency>
   <groupId>org.seleniumhq.selenium</groupId>
   <artifactId>selenium-java</artifactId>
   <version>${selenium.version}</version>
   <scope>test</scope>
  </dependency>

 </dependencies>

 <build>

  <!-- Name of the war -->
  <finalName>cdb</finalName>

  <plugins>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.5.1</version>
    <configuration>
     <source>1.8</source>
     <target>1.8</target>
    </configuration>
   </plugin>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>2.12.4</version>
    <configuration>
     <includes>
      <include>com/louisamoros/cdb/utest/**.java</include>
     </includes>
    </configuration>
    <!-- this dependency was added to force maven to run the test with junit. Otherwise the full dependency 
     of power mockito was making maven running the tests under NG test which is not what we want. -->
    <dependencies>
     <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-junit47</artifactId>
      <version>2.8</version>
     </dependency>
    </dependencies>
   </plugin>

   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-failsafe-plugin</artifactId>
    <version>2.19.1</version>
    <configuration>
     <includes>
      <include>com/louisamoros/cdb/itest/**.java</include>
     </includes>
    </configuration>
    <executions>
     <execution>
      <goals>
       <goal>integration-test</goal>
       <goal>verify</goal>
      </goals>
     </execution>
    </executions>
   </plugin>

   <plugin>
    <groupId>org.codehaus.cargo</groupId>
    <artifactId>cargo-maven2-plugin</artifactId>
    <version>1.2.0</version>
    <configuration>
     <wait>false</wait>
     <container>
      <containerId>tomcat7x</containerId>
      <zipUrlInstaller>
       <url>http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.30/bin/apache-tomcat-8.0.30.zip</url>
      </zipUrlInstaller>
     </container>
     <configuration>
      <properties>
       <cargo.servlet.port>8180</cargo.servlet.port>
       <cargo.tomcat.ajp.port>8109</cargo.tomcat.ajp.port>
      </properties>
     </configuration>
    </configuration>
    <executions>
     <!-- Cargo start goal is bound to pre-integration-test phase. Cargo will download a Tomcat 8.0.32 
      server an configure it to run on ports 8180 and 8109. After that the application under test is deployed. -->
     <execution>
      <id>start-container</id>
      <phase>pre-integration-test</phase>
      <goals>
       <goal>start</goal>
      </goals>
     </execution>
     <!-- Cargo stop goal is bound to post-integration-test phase. During this phase, that runs once 
      Failsafe finishes executing the integration tests, Cargo will stop the Tomcat server. -->
     <execution>
      <id>stop-container</id>
      <phase>post-integration-test</phase>
      <goals>
       <goal>stop</goal>
      </goals>
     </execution>
    </executions>
   </plugin>

  </plugins>
 </build>

</project>
